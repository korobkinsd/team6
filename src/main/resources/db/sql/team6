CREATE SCHEMA `team6` ;

use team6;


drop table role;

create table role
( `id` int not null AUTO_INCREMENT
, `name` varchar(255) not null
, primary key (`id`)
, unique key (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=1001;

insert into role (`name`) values ('Administrator');

insert into role (`name`) values ('Developer');

insert into role (`name`) values ('Manager');

drop table user;

create table user
( `id` int not null AUTO_INCREMENT
, `email` varchar(100) not null
, `password` varchar(255) not null
, `name` varchar(255) not null
, `surname` varchar(255)
, `userState` enum ('Active','Archive')
, primary key (`id`)
, unique key (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=101;

insert into user (`email`, `name`, `surname`, `password`) values ('admin@sj.com','Администратор','','111111');

drop table userRoles;

create table userRoles
( `idUser` int not null
, `idRole` int not null
, unique key (`idUser`,`idRole`)
);

alter table userRoles add constraint userRolesFK_userId foreign key (idUser) references `user`(id) on delete cascade on update cascade;

alter table userRoles add constraint userRolesFK_roleId foreign key (idRole) references `role`(id) on delete cascade on update cascade;

insert into userRoles (`idUser`, `idRole`) values ((select `id` from user where email = 'admin@sj.com'), (select `id` from role where name = 'Administrator'));


drop table candidateState;

create table candidateState
( `name` varchar(255) not null
, primary key (`name`)
) ENGINE=InnoDB;

insert into candidateState (`name`) values ('Активен');

insert into candidateState (`name`) values ('В архиве');


drop table suitableState;

create table suitableState
( `name` varchar(255) not null
, primary key (`name`)
) ENGINE=InnoDB;

insert into suitableState (`name`) values ('Подходит');

insert into suitableState (`name`) values ('Не подходит');


drop table feedbackState;

create table feedbackState
( `name` varchar(255) not null
, primary key (`name`)
) ENGINE=InnoDB;

insert into feedbackState (`name`) values ('Принять');

insert into feedbackState (`name`) values ('Отказать');


drop table skill;

create table skill
( `name` varchar(255) not null
, primary key (`name`)
) ENGINE=InnoDB;

insert into skill (`name`) values ('Java');

insert into skill (`name`) values ('JS');

insert into skill (`name`) values ('RDB');

insert into skill (`name`) values ('.Net');

insert into skill (`name`) values ('C++');


drop table candidate;

create table candidate
( `id` int not null AUTO_INCREMENT
, `name` varchar(255) not null
, `surname` varchar(255)
, `birthday` date
, `salary` decimal(10,2) check(`salary`>=0)
, `candidateState` varchar(255)
, primary key (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=201;

alter table candidate add constraint candidateFK_stacandidatete foreign key (candidateState) references `candidateState`(name) on delete cascade on update cascade;

insert into candidate (`name`, `surname`, `birthday`, `salary`, `candidateState`) values ('Пупкин','Вася','1995-12-27', 650, 'Активен');

insert into candidate (`name`, `surname`, `birthday`, `salary`, `candidateState`) values ('Зайцев','Стёпа','1997-02-20', 450.55, 'Активен');


drop table contactDetails;

create table contactDetails
( `idCandidate` int not null
, `contactType` enum ('Mobile phone','E-mail','Address')
, `contactDetails` varchar(1000)
, index `contactDetails_I01` (`idCandidate`)
, index `contactDetails_I02` (`contactType`)
);

alter table contactDetails add constraint contactDetailsFK_candidate foreign key (idCandidate) references `candidate`(id) on delete cascade on update cascade;


insert into contactDetails (`idCandidate`, `contactType`, `contactDetails`)
values (
  (select `id` from candidate where name = 'Пупкин')
, 'Mobile phone'
, '+375 29 123 45 78'
);

insert into contactDetails (`idCandidate`, `contactType`, `contactDetails`)
values (
  (select `id` from candidate where name = 'Пупкин')
, 'E-mail'
, 'poupkine@sj.com'
);

insert into contactDetails (`idCandidate`, `contactType`, `contactDetails`)
values (
  (select `id` from candidate where name = 'Зайцев')
, 'Mobile phone'
, '+375 44 999 88 11'
);

insert into contactDetails (`idCandidate`, `contactType`, `contactDetails`)
values (
  (select `id` from candidate where name = 'Зайцев')
, 'E-mail'
, 'zaytsev@sj.com'
);

drop table candidateExperience;

create table candidateExperience
( `idCandidate` int not null
, `dateFrom` date not null
, `dateTo` date not null
, `jobDescription` varchar(4000)
, `jobPosition` varchar(1000)
, `companyName` varchar(1000)
, index `contactDetails_I01` (`idCandidate`)
, index `contactDetails_I02` (`dateFrom`)
);

alter table candidateExperience add constraint candidateExperienceFK_candidate foreign key (idCandidate) references `candidate`(id) on delete cascade on update cascade;


drop table attachment;

create table attachment
( `idCandidate` int not null
, `filePath` varchar(1000)
, `attachmentType` enum ('CV', 'Cover Letter','Photo') not null
);

alter table attachment add constraint attachmentFK_candidate foreign key (idCandidate) references `candidate`(id) on delete cascade on update cascade;

drop table candidateCompetence;

create table candidateCompetence
( `idCandidate` int not null
, `skill` varchar(255) not null
, unique key (`idCandidate`,`skill`)
);

alter table candidateCompetence add constraint candidateCompetenceFK_candidate foreign key (idCandidate) references `candidate`(id) on delete cascade on update cascade;

alter table candidateCompetence add constraint candidateCompetenceFK_skill foreign key (skill) references `skill`(name) on delete cascade on update cascade;

drop table vacancy;

create table vacancy
( `id` int not null AUTO_INCREMENT
, `position` varchar(1000)
, `idDeveloper` int not null
, `salaryFrom` decimal(10,2) check(`salaryFrom`>=0)
, `salaryTo` decimal(10,2) check(`salaryTo`>=0)
, `vacancyState` enum ('Active','Archive')
, `experienceYearsRequire` decimal (10,2) check(`experienceYearsRequire` > 0)
, primary key (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2001;

alter table vacancy add constraint vacancyFK_developer foreign key (idDeveloper) references `user`(id) on delete cascade on update cascade;

drop table vacancyRequirement;

create table vacancyRequirement
( `idVacancy` int not null
, `skill` varchar(255) not null
, unique key (`idVacancy`,`skill`)
);

alter table vacancyRequirement add constraint vacancyRequirementFK_vacancy foreign key (idVacancy) references `vacancy`(id) on delete cascade on update cascade;

alter table vacancyRequirement add constraint vacancyRequirementFK_skill foreign key (skill) references `skill`(name) on delete cascade on update cascade;

drop table vacancyCandidates;

create table vacancyCandidates
( `idVacancy` int not null
, `idCandidate` int not null
, `suitableState` varchar(255)
, reason varchar(1000)
, unique key (`idVacancy`,`idCandidate`)
);

alter table vacancyCandidates add constraint vacancyCandidatesFK_vacancy foreign key (idVacancy) references `vacancy`(id) on delete cascade on update cascade;

alter table vacancyCandidates add constraint vacancyCandidatesFK_candidate foreign key (idCandidate) references `candidate`(id) on delete cascade on update cascade;

alter table vacancyCandidates add constraint vacancyCandidatesFK_state foreign key (suitableState) references `suitableState`(name) on delete cascade on update cascade;


drop table interview;

create table interview
( `id` int not null AUTO_INCREMENT
, `idVacancy` int not null
, `planDate` datetime not null
, `idCandidate` int not null
, `factDate` datetime
, unique key (`idVacancy`,`idCandidate`,`planDate`)
, primary key (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3001;

alter table interview add constraint interviewFK_vacancy foreign key (idVacancy) references `vacancy`(id) on delete cascade on update cascade;

alter table interview add constraint interviewFK_candidate foreign key (idCandidate) references `candidate`(id) on delete cascade on update cascade;

drop table interviewFeedback;

create table interviewFeedback
( `idInterview` int not null
, `idInterviewer` int not null
, `feedbackState` varchar(255)
, `reason` varchar(4000)
, unique key (`idInterview`,`idInterviewer`)
);

alter table interviewFeedback add constraint interviewFeedbackFK_interview foreign key (idInterview) references `interview`(id) on delete cascade on update cascade;

alter table interviewFeedback add constraint interviewFeedbackFK_interviewer foreign key (idInterviewer) references `user`(id) on delete cascade on update cascade;

alter table interviewFeedback add constraint interviewFeedbackFK_state foreign key (feedbackState) references `feedbackState`(name) on delete cascade on update cascade;

commit;

